/*
 * generated by Xtext 2.17.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.seleniumDriver.*

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SeleniumDriverGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (ts : resource.allContents.toIterable.filter(TestSuite)) {
			fsa.generateFile("«ts.suiteName»Test" + ".java", ts.generateTestSuite)
		
		}
	
	}
	
	def generateTestSuite(TestSuite ts) '''
	import seleniumDriver.TestSuite;
	
	public class «ts.suiteName»Test {
	
		public static void main(String[] args) { 
			
			«FOR tc : ts.cases»
				«tc.caseName»();
			«ENDFOR»
						
		} 
		
		«FOR tc : ts.cases»
		 	«tc.caseName»();
		«ENDFOR»
	}
	'''
	

	def generateTestCaseBody(TestCase tc) '''
	private static void  «tc.caseName»() {
	
	
	}
	'''
}
